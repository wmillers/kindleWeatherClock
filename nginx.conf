####
# nginx EXAMPLE config for kindleWeatherClock server
####
# read the FOLLOWING notes before editing the config file
##
# Replace all the NEEDTOCHANGE tags with your own's one.
# After you overwriting the default file in the `/etc/nginx/` folder,
# run `nginx -t` to test the syntax.
####

user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {
    map $http_destination $destination {
        ~*(https?:\/\/)([a-z0-9\.]+\/)(.+)$ http://192.168.208.145:8088/$3;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	gzip on;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

    server {
        #listen       80 http2 # NEEDTOCHANGE: http only
        listen       443 ssl http2;# NEEDTOCHANGE: https only
        server_name  localhost;
        server_tokens off;
        ssl_certificate     NEEDTOCHANGE.crt;# NEEDTOCHANGE： replace with your cert if https
        ssl_certificate_key NEEDTOCHANGE.key;# NEEDTOCHANGE： replace with your key if https
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;# NEEDTOCHANGE: https only
        large_client_header_buffers 4 64k;

        location /kindle/ {
            access_log off;
            proxy_redirect      off;
            proxy_buffering     off;
            proxy_http_version  1.1;
            proxy_set_header Authorization "Basic c2hhcmNEEDTOCHANGEjRwYXNz";# NEEDTOCHANGE
            proxy_pass "http://NEEDTOCHANGE/kindle/";# NEEDTOCHANGE
        }


        location / {
            return 404;
        }

        location /ics/ {
            proxy_redirect off;
            proxy_buffering off;
            proxy_http_version 1.1;
            add_header Access-Control-Allow-Methods *;
            add_header Access-Control-Allow-Credentials true;
            add_header Access_Control_Allow-Origin $http_origin;
            if ($request_method = OPTIONS){
                return 200;
            }
            access_log off;
            proxy_pass https://dida365.com/pub/calendar/feeds/7iNEEDTOCHANGEx/basic.ics;# NEEDTOCHANGE

        }

        location /hue/ {
            proxy_redirect off;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            add_header Access-Control-Allow-Methods *;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Origin $http_origin;
            if ($request_method = OPTIONS){
            return 200;
            }
            access_log off;
            proxy_pass https://philips-hue/api/;
        }

        location /blive/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Headers X-Requested-With;
            add_header Access-Control-Allow-Methods GET,POST,PUT,OPTIONS;
            access_log off;
            proxy_pass http://localhost:8099;# NEEDTOCHANGE: same as blive server port
        }
    }
}
